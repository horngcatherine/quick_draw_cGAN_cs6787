{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"quickdraw-cDCGAN_train","provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/generative/ipynb/conditional_gan.ipynb","timestamp":1637332362846}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"VGxU4kKnnLvJ"},"source":["# Conditional Deep Convolutional GAN"]},{"cell_type":"code","metadata":{"id":"I2Zb1Id1nLvW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638726164810,"user_tz":300,"elapsed":18054,"user":{"displayName":"Catherine Horng","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13344014405893365992"}},"outputId":"1ece5375-2bc6-4f2f-8c35-403dda8334c3"},"source":["!pip install -q git+https://github.com/tensorflow/docs"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  Building wheel for tensorflow-docs (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}]},{"cell_type":"code","metadata":{"id":"2Kby-82ZCayS"},"source":["# import tensorflow as tf\n","# tf.test.gpu_device_name()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZBv9p_k-ClnL","executionInfo":{"status":"ok","timestamp":1638726170816,"user_tz":300,"elapsed":6012,"user":{"displayName":"Catherine Horng","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13344014405893365992"}},"outputId":"62782129-41bb-4b36-aefb-a0808c08e2dc"},"source":["from tensorflow.python.client import device_lib\n","device_lib.list_local_devices()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[name: \"/device:CPU:0\"\n"," device_type: \"CPU\"\n"," memory_limit: 268435456\n"," locality {\n"," }\n"," incarnation: 15846390328036425276\n"," xla_global_id: -1, name: \"/device:GPU:0\"\n"," device_type: \"GPU\"\n"," memory_limit: 11320098816\n"," locality {\n","   bus_id: 1\n","   links {\n","   }\n"," }\n"," incarnation: 851556330776161388\n"," physical_device_desc: \"device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7\"\n"," xla_global_id: 416903419]"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"oTdQXKfpnLvY"},"source":["## Imports"]},{"cell_type":"code","metadata":{"id":"6Wbw4vRnnLvY"},"source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow_docs.vis import embed\n","from keras.callbacks import CSVLogger\n","\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import numpy as np\n","import imageio\n","\n","from IPython import display\n","import glob\n","import PIL\n","import time\n","import os\n","import csv\n","import datetime\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oQYBxzIAzznr"},"source":["## Mount on Google Drive"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VZg0KvFpzxhy","executionInfo":{"status":"ok","timestamp":1638726190204,"user_tz":300,"elapsed":19220,"user":{"displayName":"Catherine Horng","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13344014405893365992"}},"outputId":"d52e60e2-7401-4c20-8c02-3a66941ffdf2"},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","metadata":{"id":"E3xZTCBG0B3N"},"source":["#os.chdir('/content/gdrive/MyDrive/5. M.Eng/cs6787/final project/cDCGAN')\n","os.chdir('/content/gdrive/MyDrive/final project/cDCGAN')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EdEktvX2nLva"},"source":["## Constants and Hyperparameters"]},{"cell_type":"code","metadata":{"id":"UtZTgSw1nLvb"},"source":["num_classes = 10\n","batch_size = 64\n","num_channels = 1\n","image_size = 28\n","latent_dim = 128\n","max_items_per_class = 4000 # for loading data\n","epochs = 10\n","d_file = 'data_chosen'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IoMSjP6PRLAI"},"source":["sgd_1 = keras.optimizers.SGD(learning_rate=0.1)\n","sgd_01 = keras.optimizers.SGD(learning_rate=0.01)\n","sgd_005 = keras.optimizers.SGD(learning_rate=0.005)\n","sgd_001 = keras.optimizers.SGD(learning_rate=0.001)\n","sgd_0005 = keras.optimizers.SGD(learning_rate=0.0005)\n","sgd_0001 = keras.optimizers.SGD(learning_rate=0.0001)\n","sgd_00001 = keras.optimizers.SGD(learning_rate=0.00001)\n","\n","sgd_w_m_1_9 = keras.optimizers.SGD(learning_rate=0.1, momentum=0.9)\n","sgd_w_m_01_9 = keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n","sgd_w_m_005_9 = keras.optimizers.SGD(learning_rate=0.005, momentum=0.9)\n","sgd_w_m_001_9 = keras.optimizers.SGD(learning_rate=0.001, momentum=0.9)\n","sgd_w_m_0005_9 = keras.optimizers.SGD(learning_rate=0.0005, momentum=0.9)\n","sgd_w_m_0001_9 = keras.optimizers.SGD(learning_rate=0.0001, momentum=0.9)\n","sgd_w_m_00001_9 = keras.optimizers.SGD(learning_rate=0.00001, momentum=0.9)\n","\n","sgd_w_m_1_99 = keras.optimizers.SGD(learning_rate=0.1, momentum=0.99)\n","sgd_w_m_01_99 = keras.optimizers.SGD(learning_rate=0.01, momentum=0.99)\n","sgd_w_m_005_99 = keras.optimizers.SGD(learning_rate=0.005, momentum=0.99)\n","sgd_w_m_001_99 = keras.optimizers.SGD(learning_rate=0.001, momentum=0.99)\n","sgd_w_m_0005_99 = keras.optimizers.SGD(learning_rate=0.0005, momentum=0.99)\n","sgd_w_m_0001_99 = keras.optimizers.SGD(learning_rate=0.0001, momentum=0.99)\n","sgd_w_m_00001_99 = keras.optimizers.SGD(learning_rate=0.00001, momentum=0.99)\n","\n","rms_1 = keras.optimizers.RMSprop(learning_rate=0.1, rho=0.9)\n","rms_01 = keras.optimizers.RMSprop(learning_rate=0.01, rho=0.9)\n","rms_005 = keras.optimizers.RMSprop(learning_rate=0.005, rho=0.9)\n","rms_001 = keras.optimizers.RMSprop(learning_rate=0.001, rho=0.9)\n","rms_0005 = keras.optimizers.RMSprop(learning_rate=0.0005, rho=0.9)\n","rms_0001 = keras.optimizers.RMSprop(learning_rate=0.0001, rho=0.9)\n","rms_00001 = keras.optimizers.RMSprop(learning_rate=0.00001, rho=0.9)\n","\n","adam_1 = keras.optimizers.Adam(learning_rate=0.1, beta_1=0.9, beta_2=0.999)\n","adam_01 = keras.optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999)\n","adam_005 = keras.optimizers.Adam(learning_rate=0.005, beta_1=0.9, beta_2=0.999)\n","adam_001 = keras.optimizers.Adam(learning_rate=0.001, beta_1=0.9, beta_2=0.999)\n","adam_0005 = keras.optimizers.Adam(learning_rate=0.0005, beta_1=0.9, beta_2=0.999)\n","adam_0001 = keras.optimizers.Adam(learning_rate=0.0001, beta_1=0.9, beta_2=0.999)\n","adam_00001 = keras.optimizers.Adam(learning_rate=0.00001, beta_1=0.9, beta_2=0.999)\n","\n","adagrad_1 = keras.optimizers.Adagrad(learning_rate=0.1)\n","adagrad_01 = keras.optimizers.Adagrad(learning_rate=0.01)\n","adagrad_005 = keras.optimizers.Adagrad(learning_rate=0.005)\n","adagrad_001 = keras.optimizers.Adagrad(learning_rate=0.001)\n","adagrad_0005 = keras.optimizers.Adagrad(learning_rate=0.0005)\n","adagrad_0001 = keras.optimizers.Adagrad(learning_rate=0.0001)\n","adagrad_00001 = keras.optimizers.Adagrad(learning_rate=0.00001)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bs6mvtYzrcmX"},"source":["opts = [sgd_1, sgd_01, sgd_005, sgd_001, sgd_0005, sgd_0001, sgd_00001,\n","        sgd_w_m_1_9, sgd_w_m_01_9, sgd_w_m_005_9, sgd_w_m_001_9, sgd_w_m_0005_9, sgd_w_m_0001_9, sgd_w_m_00001_9,\n","        sgd_w_m_1_99, sgd_w_m_01_99, sgd_w_m_005_99, sgd_w_m_001_99, sgd_w_m_0005_99, sgd_w_m_0001_99, sgd_w_m_00001_99,\n","        rms_1, rms_01, rms_005, rms_001, rms_0005, rms_0001, rms_00001,\n","        adam_1, adam_01, adam_005, adam_001, adam_0005, adam_0001, adam_00001,\n","        adagrad_1, adagrad_01, adagrad_005, adagrad_001, adagrad_0005, adagrad_0001, adagrad_00001]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NppNgrIQe16_"},"source":["opts_str = ['sgd_1', 'sgd_01', 'sgd_005', 'sgd_001', 'sgd_0005', 'sgd_0001', 'sgd_00001',\n","            'sgd_w_m_1_9', 'sgd_w_m_01_9', 'sgd_w_m_005_9', 'sgd_w_m_001_9', 'sgd_w_m_0005_9', 'sgd_w_m_0001_9', 'sgd_w_m_00001_9',\n","            'sgd_w_m_1_99', 'sgd_w_m_01_99', 'sgd_w_m_005_99', 'sgd_w_m_001_99', 'sgd_w_m_0005_99', 'sgd_w_m_0001_99', 'sgd_w_m_00001_99',\n","            'rms_1', 'rms_01', 'rms_005', 'rms_001', 'rms_0005', 'rms_0001', 'rms_00001',\n","            'adam_1', 'adam_01', 'adam_005', 'adam_001', 'adam_0005', 'adam_0001', 'adam_00001',\n","            'adagrad_1', 'adagrad_01', 'adagrad_005', 'adagrad_001', 'adagrad_0005', 'adagrad_0001', 'adagrad_00001']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"C1idU_a4nLvc"},"source":["## Loading the QuickDraw! dataset and preprocessing it"]},{"cell_type":"code","metadata":{"id":"-0P7ezBpzMVL"},"source":["def load_data(data_file, img_size, max_items_per_class):\n","  \"\"\"\n","  Load all data from the data file.\n","  \"\"\"\n","  all_files = glob.glob(os.path.join(data_file, '*.npy'))\n","\n","  #initialize variables \n","  x = np.empty([0, img_size**2])\n","  y = np.empty([0])\n","  class_names = []\n","\n","  #load each data file \n","  for idx, file in enumerate(all_files):\n","      data = np.load(file)\n","      data = data[0: max_items_per_class, :]\n","      labels = np.full(data.shape[0], idx)\n","\n","      x = np.concatenate((x, data), axis=0)\n","      y = np.append(y, labels)\n","\n","      class_name, ext = os.path.splitext(os.path.basename(file))\n","      class_names.append(class_name)\n","\n","  data = None\n","  labels = None\n","\n","  #randomize the dataset \n","  permutation = np.random.permutation(y.shape[0])\n","  x = x[permutation, :]\n","  y = y[permutation]\n","\n","  x = x.reshape(max_items_per_class*10, img_size, img_size)\n","\n","  # Scale the pixel values to [0, 1] range\n","  x = x.astype(\"float32\") / 255.0\n","  # Add a channel dimension to the images\n","  x = np.reshape(x, (-1, img_size, img_size, 1))\n","  # One-hot encode the labels\n","  y = keras.utils.to_categorical(y, num_classes)\n","\n","  print(f\"Shape of training images: {x.shape}\")\n","  print(f\"Shape of training labels: {y.shape}\")\n","\n","  # Create tf.data.Dataset.\n","  dataset = tf.data.Dataset.from_tensor_slices((x, y))\n","  dataset = dataset.shuffle(buffer_size=1024).batch(batch_size)\n","\n","  return dataset"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bJda1vkFuIZK","executionInfo":{"status":"ok","timestamp":1638726222726,"user_tz":300,"elapsed":32036,"user":{"displayName":"Catherine Horng","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13344014405893365992"}},"outputId":"b3c8a531-f7d8-4b99-c081-9af2bd473721"},"source":["dataset = load_data(d_file, image_size, max_items_per_class)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of training images: (40000, 28, 28, 1)\n","Shape of training labels: (40000, 10)\n"]}]},{"cell_type":"markdown","metadata":{"id":"0dgoIEq1nLvf"},"source":["## Calculating the number of input channel for the generator and discriminator\n","\n","In a regular (unconditional) GAN, we start by sampling noise (of some fixed\n","dimension) from a normal distribution. In our case, we also need to account\n","for the class labels. We will have to add the number of classes to\n","the input channels of the generator (noise input) as well as the discriminator\n","(generated image input)."]},{"cell_type":"code","metadata":{"id":"txE-h-NbnLvh"},"source":["generator_in_channels = latent_dim + num_classes\n","discriminator_in_channels = num_channels + num_classes"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RNCf8DhAnLvi"},"source":["## Creating the discriminator and generator\n","\n","The model definitions (`discriminator`, `generator`, and `ConditionalGAN`) have been\n","adapted from [this example](https://keras.io/guides/customizing_what_happens_in_fit/)."]},{"cell_type":"code","metadata":{"id":"ePRNWnJtU5Mw"},"source":["def make_tutorialD():\n","    model = tf.keras.Sequential(name=\"discriminator\")\n","\n","    # 1 + 10 = 11, (28, 28, 11)\n","    model.add(layers.InputLayer((28, 28, discriminator_in_channels)))\n","    print(\"D Input Layer, 11: \", model.output_shape)\n","    \n","    # output: 32*4; 4, 2, 1\n","    model.add(layers.Conv2D(64, (3, 3), strides=(2, 2), padding='same'))\n","    model.add(layers.LeakyReLU(alpha=0.2))\n","    print(\"D Layer 1, 128: \", model.output_shape)\n","\n","    # output: 32*8; 4, 2, 1\n","    model.add(layers.Conv2D(128, (4, 4), strides=(2, 2), padding='same'))\n","    model.add(layers.LeakyReLU(alpha=0.2))\n","    print(\"D Layer 2, 128: \", model.output_shape)\n","\n","    # output: 1; 7, 1, 0\n","    model.add(layers.GlobalMaxPooling2D())\n","    model.add(layers.Dense(1))\n","    print(\"D Layer 3, 1: \", model.output_shape)\n","    return model\n","\n","def make_tutorialG():\n","    model = tf.keras.Sequential(name=\"generator\")\n","\n","    # 128 + 10 = 138, (138,)\n","    model.add(layers.InputLayer((generator_in_channels,)))\n","    model.add(layers.Dense(7 * 7 * generator_in_channels))\n","    model.add(layers.LeakyReLU(alpha=0.2))\n","    model.add(layers.Reshape((7, 7, generator_in_channels)))\n","    print(\"G Input Layer: \", model.output_shape)\n","\n","    # output: 32*8; 7, 1, 0\n","    model.add(layers.Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same'))\n","    model.add(layers.LeakyReLU(alpha=0.2))\n","    print(\"G Layer 1, 256: \", model.output_shape)\n","\n","    # output: 32*4; 4, 2, 1\n","    model.add(layers.Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same'))\n","    model.add(layers.LeakyReLU(alpha=0.2))\n","    print(\"G Layer 2, 128: \", model.output_shape)\n","    \n","    # output: 1; 4, 2, 1\n","    model.add(layers.Conv2D(1, (7, 7), padding='same',\n","                               activation=\"sigmoid\"))\n","    print(\"G Layer 3, 1: \", model.output_shape)\n","    return model"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RtgK9fGmnLvl"},"source":["## Creating a `ConditionalGAN` model"]},{"cell_type":"code","metadata":{"id":"G74EFbGTnLvm"},"source":["class ConditionalGAN(keras.Model):\n","    def __init__(self, discriminator, generator, latent_dim):\n","        super(ConditionalGAN, self).__init__()\n","        self.discriminator = discriminator\n","        self.generator = generator\n","        self.latent_dim = latent_dim\n","        self.gen_loss_tracker = keras.metrics.Mean(name=\"generator_loss\")\n","        self.disc_loss_tracker = keras.metrics.Mean(name=\"discriminator_loss\")\n","\n","    @property\n","    def metrics(self):\n","        return [self.gen_loss_tracker,\n","                self.disc_loss_tracker]\n","\n","    def compile(self, d_optimizer, g_optimizer, loss_fn):\n","        super(ConditionalGAN, self).compile()\n","        self.d_optimizer = d_optimizer\n","        self.g_optimizer = g_optimizer\n","        self.loss_fn = loss_fn\n","\n","    def train_step(self, data):\n","        # Unpack the data.\n","        real_images, one_hot_labels = data\n","\n","        # Add dummy dimensions to the labels so that they can be concatenated with\n","        # the images. This is for the discriminator.\n","        image_one_hot_labels = one_hot_labels[:, :, None, None]\n","        image_one_hot_labels = tf.repeat(\n","            image_one_hot_labels, repeats=[image_size * image_size]\n","        )\n","        image_one_hot_labels = tf.reshape(\n","            image_one_hot_labels, (-1, image_size, image_size, num_classes)\n","        )\n","\n","        # Sample random points in the latent space and concatenate the labels.\n","        # This is for the generator.\n","        batch_size = tf.shape(real_images)[0]\n","        random_latent_vectors = tf.random.normal(shape=(batch_size, self.latent_dim))\n","        random_vector_labels = tf.concat(\n","            [random_latent_vectors, one_hot_labels], axis=1\n","        )\n","\n","        # Decode the noise (guided by labels) to fake images.\n","        generated_images = self.generator(random_vector_labels)\n","\n","        # Combine them with real images. Note that we are concatenating the labels\n","        # with these images here.\n","        fake_image_and_labels = tf.concat([generated_images, image_one_hot_labels], -1)\n","        real_image_and_labels = tf.concat([real_images, image_one_hot_labels], -1)\n","        combined_images = tf.concat(\n","            [fake_image_and_labels, real_image_and_labels], axis=0\n","        )\n","\n","        # Assemble labels discriminating real from fake images.\n","        labels = tf.concat(\n","            [tf.ones((batch_size, 1)), tf.zeros((batch_size, 1))], axis=0\n","        )\n","\n","        # Train the discriminator.\n","        with tf.GradientTape() as tape:\n","            predictions = self.discriminator(combined_images)\n","            d_loss = self.loss_fn(labels, predictions)\n","        grads = tape.gradient(d_loss, self.discriminator.trainable_weights)\n","        self.d_optimizer.apply_gradients(\n","            zip(grads, self.discriminator.trainable_weights)\n","        )\n","\n","        # Sample random points in the latent space.\n","        random_latent_vectors = tf.random.normal(shape=(batch_size, self.latent_dim))\n","        random_vector_labels = tf.concat(\n","            [random_latent_vectors, one_hot_labels], axis=1\n","        )\n","\n","        # Assemble labels that say \"all real images\".\n","        misleading_labels = tf.zeros((batch_size, 1))\n","\n","        # Train the generator (note that we should *not* update the weights\n","        # of the discriminator)!\n","        with tf.GradientTape() as tape:\n","            fake_images = self.generator(random_vector_labels)\n","            fake_image_and_labels = tf.concat([fake_images, image_one_hot_labels], -1)\n","            predictions = self.discriminator(fake_image_and_labels)\n","            g_loss = self.loss_fn(misleading_labels, predictions)\n","        grads = tape.gradient(g_loss, self.generator.trainable_weights)\n","        self.g_optimizer.apply_gradients(zip(grads, self.generator.trainable_weights))\n","\n","        # Monitor loss.\n","        self.gen_loss_tracker.update_state(g_loss)\n","        self.disc_loss_tracker.update_state(d_loss)\n","        return {\n","            \"g_loss\": self.gen_loss_tracker.result(),\n","            \"d_loss\": self.disc_loss_tracker.result(),\n","        }"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oJkLerN6nLvn"},"source":["## Training the Conditional GAN"]},{"cell_type":"markdown","metadata":{"id":"C9w3tpXL_te0"},"source":["Create the cDCGAN."]},{"cell_type":"code","metadata":{"id":"nzwKY9okgJwW"},"source":["def train_GAN(opt_num):\n","  now = datetime.datetime.now().isoformat(timespec='seconds')\n","  unique = opts_str[opt_num] + '_time_'+str(epochs)+'_'+now\n","  os.mkdir(unique)\n","  cond_gan = ConditionalGAN(\n","    discriminator=make_tutorialD(),\n","    generator=make_tutorialG(),\n","    latent_dim=latent_dim\n","  )\n","  cond_gan.compile(\n","    d_optimizer=opts[opt_num],\n","    g_optimizer=opts[opt_num],\n","    loss_fn=keras.losses.BinaryCrossentropy(from_logits=True),\n","  )\n","  csv_logger = CSVLogger(unique+'/training_'+unique+'.csv')\n","  start_time = time.time()\n","  cond_gan.fit(dataset, epochs=epochs, callbacks=[csv_logger])\n","  total_time = time.time() - start_time\n","  print(\"--- Training took %s seconds ---\" % (total_time))\n","\n","  cond_gan.discriminator.save(unique+'/discriminator_'+unique+'.h5')\n","  cond_gan.generator.save(unique+'/generator_'+unique+'.h5')\n","  f = open('times.csv', 'a')\n","  writer = csv.writer(f)\n","  writer.writerow([unique, total_time])\n","  f.close()\n","  print(\"Saved at \" + unique)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dEcYlOQe_yKD"},"source":["Train the cDCGAN."]},{"cell_type":"code","metadata":{"id":"0uaQeH_3nLvo","colab":{"base_uri":"https://localhost:8080/"},"outputId":"2ec67cdf-5cbe-4ddb-b87e-ff454bfbc387"},"source":["for opt_num in range(len(opts)):\n","  train_GAN(opt_num)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 56s 71ms/step - g_loss: 3.5043 - d_loss: 0.2018\n","Epoch 2/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 5.0507 - d_loss: 0.0721\n","Epoch 3/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 6.9745 - d_loss: 0.0015\n","Epoch 4/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 7.5994 - d_loss: 0.0012\n","Epoch 5/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 7.9125 - d_loss: 0.0010\n","Epoch 6/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 8.1788 - d_loss: 7.6202e-04\n","Epoch 7/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 8.3214 - d_loss: 8.8244e-04\n","Epoch 8/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 8.5078 - d_loss: 7.1258e-04\n","Epoch 9/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 8.6999 - d_loss: 5.4885e-04\n","Epoch 10/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 8.7919 - d_loss: 5.6472e-04\n","--- Training took 669.6431727409363 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_1_time_10_2021-12-05T17:43:43\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 44s 69ms/step - g_loss: 0.9110 - d_loss: 0.5579\n","Epoch 2/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 2.8244 - d_loss: 0.0854\n","Epoch 3/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 1.8774 - d_loss: 0.2305\n","Epoch 4/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 1.4641 - d_loss: 0.4118\n","Epoch 5/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 1.4904 - d_loss: 0.3942\n","Epoch 6/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.5592 - d_loss: 0.3875\n","Epoch 7/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 1.6020 - d_loss: 0.3705\n","Epoch 8/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 1.6355 - d_loss: 0.3799\n","Epoch 9/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 1.6764 - d_loss: 0.3716\n","Epoch 10/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: 1.6722 - d_loss: 0.3792\n","--- Training took 708.8176305294037 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_01_time_10_2021-12-05T17:54:53\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 44s 69ms/step - g_loss: 0.7943 - d_loss: 0.6359\n","Epoch 2/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 1.2298 - d_loss: 0.3565\n","Epoch 3/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 2.5044 - d_loss: 0.0932\n","Epoch 4/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 3.1609 - d_loss: 0.0897\n","Epoch 5/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 3.0104 - d_loss: 0.0918\n","Epoch 6/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.4961 - d_loss: 0.3313\n","Epoch 7/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 1.3390 - d_loss: 0.3821\n","Epoch 8/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.4504 - d_loss: 0.3406\n","Epoch 9/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.5576 - d_loss: 0.3328\n","Epoch 10/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.5110 - d_loss: 0.3840\n","--- Training took 588.0809273719788 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_005_time_10_2021-12-05T18:06:42\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 45s 70ms/step - g_loss: 0.8154 - d_loss: 0.6768\n","Epoch 2/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.8622 - d_loss: 0.5804\n","Epoch 3/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 0.8248 - d_loss: 0.5872\n","Epoch 4/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7266 - d_loss: 0.6504\n","Epoch 5/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 0.8690 - d_loss: 0.5223\n","Epoch 6/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 1.2477 - d_loss: 0.3179\n","Epoch 7/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 1.1064 - d_loss: 0.3900\n","Epoch 8/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 1.8457 - d_loss: 0.2043\n","Epoch 9/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: 1.9979 - d_loss: 0.1489\n","Epoch 10/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: 2.2021 - d_loss: 0.1136\n","--- Training took 669.9877524375916 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_001_time_10_2021-12-05T18:16:31\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 44s 68ms/step - g_loss: 0.7546 - d_loss: 0.6826\n","Epoch 2/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: 0.7986 - d_loss: 0.6398\n","Epoch 3/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.8422 - d_loss: 0.6016\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.8852 - d_loss: 0.5656\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.9027 - d_loss: 0.5445\n","Epoch 6/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 0.8192 - d_loss: 0.5837\n","Epoch 7/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7408 - d_loss: 0.6342\n","Epoch 8/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7571 - d_loss: 0.6107\n","Epoch 9/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.8221 - d_loss: 0.5458\n","Epoch 10/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.9412 - d_loss: 0.4511\n","--- Training took 743.6731486320496 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_0005_time_10_2021-12-05T18:27:41\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 46s 71ms/step - g_loss: 0.6973 - d_loss: 0.6865\n","Epoch 2/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: 0.7421 - d_loss: 0.6713\n","Epoch 3/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.7662 - d_loss: 0.6591\n","Epoch 4/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.7824 - d_loss: 0.6485\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7956 - d_loss: 0.6382\n","Epoch 6/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.8073 - d_loss: 0.6282\n","Epoch 7/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 0.8177 - d_loss: 0.6188\n","Epoch 8/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.8283 - d_loss: 0.6096\n","Epoch 9/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.8387 - d_loss: 0.6007\n","Epoch 10/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.8490 - d_loss: 0.5920\n","--- Training took 667.7018945217133 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_0001_time_10_2021-12-05T18:40:05\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 45s 70ms/step - g_loss: 0.7063 - d_loss: 0.6929\n","Epoch 2/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7096 - d_loss: 0.6914\n","Epoch 3/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7127 - d_loss: 0.6900\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7158 - d_loss: 0.6885\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7187 - d_loss: 0.6871\n","Epoch 6/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.7215 - d_loss: 0.6857\n","Epoch 7/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: 0.7243 - d_loss: 0.6843\n","Epoch 8/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7271 - d_loss: 0.6829\n","Epoch 9/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 0.7296 - d_loss: 0.6816\n","Epoch 10/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 0.7322 - d_loss: 0.6802\n","--- Training took 670.4643023014069 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_00001_time_10_2021-12-05T18:51:13\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 46s 71ms/step - g_loss: 9.4006 - d_loss: 0.0863\n","Epoch 2/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 10.9756 - d_loss: 1.9275e-04\n","Epoch 3/10\n","625/625 [==============================] - 46s 73ms/step - g_loss: 11.3968 - d_loss: 1.0737e-04\n","Epoch 4/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 11.9699 - d_loss: 4.8638e-05\n","Epoch 5/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 12.1981 - d_loss: 3.8346e-05\n","Epoch 6/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 12.7062 - d_loss: 2.3109e-05\n","Epoch 7/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 12.9012 - d_loss: 2.8570e-05\n","Epoch 8/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 13.0723 - d_loss: 1.8593e-05\n","Epoch 9/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 13.2316 - d_loss: 1.4773e-05\n","Epoch 10/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 13.4151 - d_loss: 1.4634e-05\n","--- Training took 595.7136604785919 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_1_9_time_10_2021-12-05T19:02:23\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 46s 71ms/step - g_loss: 3.7926 - d_loss: 0.2590\n","Epoch 2/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 8.1344 - d_loss: 4.7367e-04\n","Epoch 3/10\n","625/625 [==============================] - 44s 71ms/step - g_loss: 9.0172 - d_loss: 2.0983e-04\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 9.4604 - d_loss: 1.4168e-04\n","Epoch 5/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 9.7664 - d_loss: 1.1133e-04\n","Epoch 6/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 9.9760 - d_loss: 9.0686e-05\n","Epoch 7/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 10.1737 - d_loss: 7.3202e-05\n","Epoch 8/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 10.3048 - d_loss: 6.9033e-05\n","Epoch 9/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 10.4575 - d_loss: 5.8386e-05\n","Epoch 10/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 10.5754 - d_loss: 5.1387e-05\n","--- Training took 594.7852776050568 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_01_9_time_10_2021-12-05T19:12:19\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 47s 73ms/step - g_loss: 2.8711 - d_loss: 0.3182\n","Epoch 2/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 5.5134 - d_loss: 0.0044\n","Epoch 3/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 6.9885 - d_loss: 0.0012\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 7.5538 - d_loss: 8.7993e-04\n","Epoch 5/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 7.8831 - d_loss: 8.5053e-04\n","Epoch 6/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 8.1237 - d_loss: 7.8132e-04\n","Epoch 7/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 8.3067 - d_loss: 7.2315e-04\n","Epoch 8/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 8.4415 - d_loss: 6.5892e-04\n","Epoch 9/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 8.5538 - d_loss: 7.4632e-04\n","Epoch 10/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 8.6583 - d_loss: 7.2346e-04\n","--- Training took 595.0109841823578 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_005_9_time_10_2021-12-05T19:22:14\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 46s 72ms/step - g_loss: 0.8985 - d_loss: 0.5489\n","Epoch 2/10\n","625/625 [==============================] - 45s 72ms/step - g_loss: 2.9785 - d_loss: 0.0875\n","Epoch 3/10\n","625/625 [==============================] - 45s 71ms/step - g_loss: 2.0857 - d_loss: 0.2346\n","Epoch 4/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.5899 - d_loss: 0.3818\n","Epoch 5/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.8316 - d_loss: 0.3345\n","Epoch 6/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 2.0325 - d_loss: 0.3003\n","Epoch 7/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 2.0426 - d_loss: 0.2847\n","Epoch 8/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 2.1639 - d_loss: 0.2748\n","Epoch 9/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 2.0492 - d_loss: 0.2984\n","Epoch 10/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.9138 - d_loss: 0.3157\n","--- Training took 668.4248311519623 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_001_9_time_10_2021-12-05T19:32:10\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 45s 70ms/step - g_loss: 0.7939 - d_loss: 0.6373\n","Epoch 2/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.1800 - d_loss: 0.3860\n","Epoch 3/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 2.1791 - d_loss: 0.1539\n","Epoch 4/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 2.6290 - d_loss: 0.1074\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 2.6321 - d_loss: 0.1172\n","Epoch 6/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 2.6534 - d_loss: 0.1614\n","Epoch 7/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 1.4854 - d_loss: 0.3509\n","Epoch 8/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.6068 - d_loss: 0.3102\n","Epoch 9/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 1.5050 - d_loss: 0.3618\n","Epoch 10/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.6190 - d_loss: 0.3755\n","--- Training took 629.444257736206 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_0005_9_time_10_2021-12-05T19:43:18\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 45s 69ms/step - g_loss: 0.7185 - d_loss: 0.6469\n","Epoch 2/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.9080 - d_loss: 0.5452\n","Epoch 3/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7641 - d_loss: 0.6281\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7435 - d_loss: 0.6325\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.9037 - d_loss: 0.4977\n","Epoch 6/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.3205 - d_loss: 0.2859\n","Epoch 7/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 1.3866 - d_loss: 0.2644\n","Epoch 8/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 1.6707 - d_loss: 0.2629\n","Epoch 9/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 2.2727 - d_loss: 0.1197\n","Epoch 10/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 2.1036 - d_loss: 0.1271\n","--- Training took 706.1597194671631 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_0001_9_time_10_2021-12-05T19:53:48\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 45s 70ms/step - g_loss: 0.6659 - d_loss: 0.6987\n","Epoch 2/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.7042 - d_loss: 0.6848\n","Epoch 3/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7261 - d_loss: 0.6733\n","Epoch 4/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7418 - d_loss: 0.6627\n","Epoch 5/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7546 - d_loss: 0.6527\n","Epoch 6/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7665 - d_loss: 0.6432\n","Epoch 7/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.7776 - d_loss: 0.6339\n","Epoch 8/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 0.7887 - d_loss: 0.6245\n","Epoch 9/10\n","625/625 [==============================] - 43s 70ms/step - g_loss: 0.8005 - d_loss: 0.6152\n","Epoch 10/10\n","625/625 [==============================] - 44s 70ms/step - g_loss: 0.8130 - d_loss: 0.6060\n","--- Training took 629.0274004936218 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_00001_9_time_10_2021-12-05T20:05:34\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 44s 68ms/step - g_loss: nan - d_loss: nan\n","Epoch 2/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: nan - d_loss: nan\n","Epoch 3/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: nan - d_loss: nan\n","Epoch 4/10\n","625/625 [==============================] - 42s 67ms/step - g_loss: nan - d_loss: nan\n","Epoch 5/10\n","625/625 [==============================] - 42s 67ms/step - g_loss: nan - d_loss: nan\n","Epoch 6/10\n","625/625 [==============================] - 42s 67ms/step - g_loss: nan - d_loss: nan\n","Epoch 7/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: nan - d_loss: nan\n","Epoch 8/10\n","625/625 [==============================] - 43s 68ms/step - g_loss: nan - d_loss: nan\n","Epoch 9/10\n","625/625 [==============================] - 42s 68ms/step - g_loss: nan - d_loss: nan\n","Epoch 10/10\n","625/625 [==============================] - 42s 67ms/step - g_loss: nan - d_loss: nan\n","--- Training took 544.2145657539368 seconds ---\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n","Saved at sgd_w_m_1_99_time_10_2021-12-05T20:16:04\n","D Input Layer, 11:  (None, 28, 28, 11)\n","D Layer 1, 128:  (None, 14, 14, 64)\n","D Layer 2, 128:  (None, 7, 7, 128)\n","D Layer 3, 1:  (None, 1)\n","G Input Layer:  (None, 7, 7, 138)\n","G Layer 1, 256:  (None, 14, 14, 128)\n","G Layer 2, 128:  (None, 28, 28, 128)\n","G Layer 3, 1:  (None, 28, 28, 1)\n","Epoch 1/10\n","625/625 [==============================] - 44s 69ms/step - g_loss: 19.0461 - d_loss: 0.1967\n","Epoch 2/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 53.9678 - d_loss: 8.7668e-16\n","Epoch 3/10\n","625/625 [==============================] - 43s 69ms/step - g_loss: 54.2023 - d_loss: 8.5580e-16\n"]}]},{"cell_type":"code","metadata":{"id":"pytxijq-7UP4"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tnJXTGE3D0TT"},"source":[""],"execution_count":null,"outputs":[]}]}